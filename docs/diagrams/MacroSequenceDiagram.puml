@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":McGymmyParser" as McGymmyParser LOGIC_COLOR
participant ":MacroList" as MacroList LOGIC_COLOR
participant "test:Macro" as Macro LOGIC_COLOR
participant ":PrimitiveCommandParser" as PrimitiveCommandParser LOGIC_COLOR
participant "testInstance:CommandExecutable" as CommandExecutable LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

[-> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> McGymmyParser : parseCommand("test -a banana")
activate McGymmyParser

activate MacroList
McGymmyParser -> MacroList : getMacro("test")
MacroList -> McGymmyParser : test
deactivate MacroList

McGymmyParser -> Macro : commandInstance(arguments)
activate Macro

create PrimitiveCommandParser
Macro -> PrimitiveCommandParser
activate PrimitiveCommandParser
PrimitiveCommandParser -> Macro
deactivate PrimitiveCommandParser

loop for each macro line
Macro -> PrimitiveCommandParser : parse
activate PrimitiveCommandParser
PrimitiveCommandParser -> Macro
deactivate PrimitiveCommandParser
end

create CommandExecutable
Macro -> CommandExecutable
activate CommandExecutable
CommandExecutable -> Macro
deactivate CommandExecutable

Macro --> McGymmyParser : testInstance
deactivate Macro

McGymmyParser --> LogicManager : testInstance
deactivate McGymmyParser

LogicManager -> CommandExecutable : execute()
activate CommandExecutable

create CommandResult
CommandExecutable -> CommandResult
activate CommandResult

CommandResult --> CommandExecutable
deactivate CommandResult

CommandExecutable --> LogicManager : result
deactivate CommandExecutable

[<--LogicManager
deactivate LogicManager
@enduml
