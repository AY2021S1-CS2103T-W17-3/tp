@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":McGymmyParser" as McGymmyParser LOGIC_COLOR
participant ":PrimitiveCommandParser" as PrimitiveCommandParser LOGIC_COLOR
participant "u:UndoCommand" as UndoCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as Model MODEL_COLOR
participant ":Stack<ReadOnlyMcGymmy>" as McGymmyStack MODEL_COLOR
end box

[-> LogicManager : execute(undo)
activate LogicManager

LogicManager -> McGymmyParser : parse(undo)
activate McGymmyParser

McGymmyParser -> PrimitiveCommandParser : parse(undo)
activate PrimitiveCommandParser

create UndoCommand
PrimitiveCommandParser -> UndoCommand
activate UndoCommand

UndoCommand --> PrimitiveCommandParser: u
deactivate UndoCommand

PrimitiveCommandParser --> McGymmyParser: u
deactivate PrimitiveCommandParser

McGymmyParser --> LogicManager : u
deactivate McGymmyParser

LogicManager -> UndoCommand : execute(model)
activate UndoCommand

UndoCommand -> Model : undo()
activate Model

Model -> Model : canUndo()
activate Model

Model -> Model : true
deactivate Model

Model -> McGymmyStack :pop()
activate McGymmyStack

McGymmyStack -> Model : m:ReadOnlyMcGymmy
deactivate McGymmyStack

Model -> Model: resetData(m)
activate Model

Model -> Model
deactivate Model

Model --> UndoCommand
deactivate Model

UndoCommand --> LogicManager : result
deactivate UndoCommand
UndoCommand -[hidden]-> LogicManager : result
destroy UndoCommand

[<--LogicManager
deactivate LogicManager
@enduml
